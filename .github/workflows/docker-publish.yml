name: Publish Docker image

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to publish (e.g., v1.2.3)'
        required: true
        type: string

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # ghcr.io/<owner>/<repo>

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        continue-on-error: true

      - name: Build (compile test)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish:
    needs: build
    if: ${{ github.event_name == 'release' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        continue-on-error: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag with release version when a release is published
            type=raw,value=${{ github.event.release.tag_name }},enable=${{ github.event_name == 'release' }}
            # Tag as latest only for release publishes
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}
            # Manual dispatch: use provided version input
            type=raw,value=${{ github.event.inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version != '' }}
            # Always produce a sha tag
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
